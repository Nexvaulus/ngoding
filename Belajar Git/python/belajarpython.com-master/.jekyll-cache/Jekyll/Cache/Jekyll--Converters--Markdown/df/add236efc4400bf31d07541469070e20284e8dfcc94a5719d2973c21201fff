I"T#<hr />
<p>Saat Anda ingin menyimpan data, Anda bisa menggunakan <a href="https://belajarpython.com/tutorial/variabel-python">variabel</a>. Tapi “masa hidup” variabel hanyalah selama program tersebut berjalan — data variabel dihapus saat program berhenti.</p>

<p>Bagaimana jika Anda ingin menyimpan sesuatu selama jangka yang lebih panjang, sehingga bahkan setelah Anda mematikan komputer Anda, datanya tidak terhapus? Sehingga Anda bisa mengakses lagi datanya lain hari?</p>

<p>Anda bisa menggunakan <em>files</em> (atau, sebagaimana sebagian orang menerjemahkannya, berkas).</p>

<p>Berbeda dengan variabel yang datanya disimpan di memori utama (<em>main memory</em>), <em>files</em> (atau berkas) berurusan dengan memori sekunder (<em>secondary memory</em>). Data tidak hanya bakal tetap disimpan setelah komputer dimatikan dan bisa diakses lagi setelah komputer kembali dinyalakan, tetapi juga bisa disalin ke USB dan dipindahkan ke komputer lain.</p>

<h2 id="text-files">Text files</h2>
<p>File ada berbagai jenis, contohnya file biner (<em>binary file</em>), tapi tutorial ini bakal membicarakan file berisi teks (<em>text files</em>).</p>

<p>Jika sebuah string terdiri dari rentetan karakter, maka sebuah text file terdiri dari rentetan baris (<em>line</em>). Baris-baris tersebut dipisahkan oleh sebuah <em>special character</em>, <code class="highlighter-rouge">\n</code>, yang disebut <em>newline</em>.</p>

<p>Jika Anda menge-<code class="highlighter-rouge">print</code> sebuah variabel string yang mengandung karakter newline <code class="highlighter-rouge">\n</code>, Python bakal menginterpretasikan karakter tersebut sebagai sebuah perintah untuk menge-<code class="highlighter-rouge">print</code> sisa string setelahnya di baris baru.</p>

<p>Sebagai contoh, <code class="highlighter-rouge">print('Selamat\npagi')</code> bakal menghasilkan output:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Selamat
pagi
</code></pre></div></div>
<p>Sedangkan <code class="highlighter-rouge">print('selam\nat pagi')</code> bakal menghasilkan:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>selam
at pagi
</code></pre></div></div>

<h2 id="membuka-file">Membuka file</h2>
<p>Untuk membuka sebuah file, perintah bisa diberikan agar Python berkomunikasi dengan sistem operasi komputer dan meminta filenya.</p>

<p>Dalam contoh berikut, file <code class="highlighter-rouge">helloworld.txt</code> berada di folder yang sama dengan program Python tersebut.</p>

<p><code class="highlighter-rouge">fread = open('helloworld.txt')</code></p>

<p>Sistem operasi bakal kemudian mencari file yang dimaksud menurut alamat file yang telah diberikan, yaitu <code class="highlighter-rouge">helloworld.txt</code>.</p>

<p>Jika file-nya ada dan Anda memiliki izin (<em>permission</em>) untuk membuka file tersebut, maka sistem komputer bakal mengembalikan apa yang namanya adalah sebuah <em>file handle</em>, yang dalam contoh di atas disimpan di dalam variabel <code class="highlighter-rouge">fread</code>.</p>

<p>Jika file yang diminta tidak ada, akan terjadi <em>error</em>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
IOError: [Errno 2] No such file or directory: 'tidakada.txt'
</code></pre></div></div>

<p>Karena <code class="highlighter-rouge">open()</code> tidak membaca langsung seluruh file, <code class="highlighter-rouge">open()</code> selalu memerlukan waktu yang sama tidak peduli besar file yang dibuka.</p>

<p>Menggunakan <a href="https://belajarpython.com/tutorial/file-io-python">input()</a>, Anda bisa memberikan pengguna program kemampuan untuk memasukkan nama file sendiri.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fname = input('File yang ingin dibuka: ')
fread = open(fname)
</code></pre></div></div>

<p>Tapi bagaimana jika pengguna meminta file yang tidak ada?</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Traceback (most recent call last):
  File "q.py", line 2, in &lt;module&gt;
    fread = open(fname)
FileNotFoundError: [Errno 2] No such file or directory: 'aa'
</code></pre></div></div>

<p>Anda bisa menggunakan <a href="https://belajarpython.com/tutorial/exception-python">exception</a> agar program tidak langsung error dan berhenti saat pengguna memasukkan input tidak valid.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fname = input('File yang ingin dibuka: ')
try:
    fread = open(fname)
except:
    print('File yang diminta tidak ada.')
</code></pre></div></div>

<h2 id="membaca-file-yang-sudah-ada">Membaca file yang sudah ada</h2>

<p><em>File handle</em> tidak berisi data file. Jika Anda menjalankan <code class="highlighter-rouge">print(fread)</code>, Anda bakal mendapatkan <code class="highlighter-rouge">&lt;open file 'helloworld.txt', mode 'r' at 0x7f20c47dd540&gt;</code> atau variasinya sebagai output.</p>

<p>Tapi Anda bisa menggunakannya untuk membaca file baris demi baris dengan bantuan <a href="https://belajarpython.com/tutorial/loop-python">loop</a> <code class="highlighter-rouge">for</code>.</p>

<p>Sebagai contoh, program di bawah ini menghitung jumlah baris (termasuk baris kosong) yang ada di dalam file <a href="https://gist.github.com/amuritna/90ddfa39e707db74cf6ad8faae2beed5">chairil-anwar-aku.txt</a>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fread = open('chairil-anwar-aku.txt')

count = 0
for line in fread:
    count += 1

print(count)
</code></pre></div></div>

<p>Outputnya adalah <code class="highlighter-rouge">19</code>.</p>

<p>Anda bisa mengecek isi tiap baris dengan memperlakukan <code class="highlighter-rouge">line</code> sebagai sebuah variabel berisi string yang memiliki sebuah karakter <code class="highlighter-rouge">\n</code> di ujung belakangnya.</p>

<p>Program di atas bisa dimodifikasi sehingga yang dihitung hanyalah baris yang <em>tidak</em> kosong (<code class="highlighter-rouge">.strip()</code> menghapus semua karakter spasi dan <code class="highlighter-rouge">\n</code> di kiri-kanan string):</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fread = open('chairil-anwar-aku.txt')

count = 0
for line in fread:
    if len(line.strip()) &gt; 0 :
        count += 1

print(count)
</code></pre></div></div>

<p>Outputnya adalah <code class="highlighter-rouge">13</code>.</p>

<h2 id="membuat-dan-menulis-file-baru">Membuat dan menulis file baru</h2>
<p>Untuk membuat sebuah file, gunakan <code class="highlighter-rouge">open()</code>, tapi kali ini dengan dengan <code class="highlighter-rouge">'w'</code> sebagai parameter kedua.</p>

<p><code class="highlighter-rouge">fwrite = open('filebaru.txt', 'w')</code></p>

<p>Jika file tersebut belum ada, maka bakal dibuat sebuah file baru. Jika sudah ada, maka file yang lama bakal dihapus.</p>

<p>Metode <code class="highlighter-rouge">.write()</code> menambahkan data ke ujung akhir file.</p>

<p><code class="highlighter-rouge">fwrite.write('Baris baru!\n')</code></p>

<p>Sebagai contoh, program berikut bakal menghasilkan file <a href="https://gist.github.com/amuritna/b03a2d4532fd8fd254945036ea299e6b">output-angka-segitiga.txt</a>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fwrite = open('output-angka-segitiga.txt', 'w')

n = 1
for i in range(2, 50):
    n += i
    fwrite.write(str(n) + '\n')

fwrite.close()
</code></pre></div></div>

<p>Pastikan untuk menambahkan <code class="highlighter-rouge">.close()</code> ke akhir setelah selesai menulis ke file.</p>

<h2 id="file-sebagai-inputoutput">File sebagai input/output</h2>

<p>File sangat membantu jika Anda mesti berurusan dengan data input atau output dalam jumlah yang banyak dan repot jika mesti di-<code class="highlighter-rouge">input()</code> atau di-<code class="highlighter-rouge">print()</code> satu-persatu.</p>

<p>Sebagai contoh terakhir, program berikut menghasilkan <a href="https://gist.github.com/amuritna/f1217628865dad591431f13d9626aa2a">output_daftar-provinsi.txt</a> jika diberikan input <a href="https://gist.github.com/amuritna/c00f6c34e80d19381761d85bc0dcd0d9">daftar-provinsi.txt</a>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>while True:
    fname = input('Nama file input: ')

    try:
        fread = open(fname)
        break
    except:
        print('Tidak dapat menemukan file yang dimaksud, tolong cek lagi.\nNama file input: ')

nama = []
for line in fread:
    nama.append(line.strip())

nama = sorted(nama)

fwrite = open('output_' + fname, 'w')

for item in nama:
    fwrite.write(item + '\n')

fwrite.close()
</code></pre></div></div>

<blockquote>
  <p><em>penulis: Emmanuella Rumanti <a href="https://github.com/amuritna">https://github.com/amuritna</a></em></p>
</blockquote>

:ET